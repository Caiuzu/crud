plugins {
    id 'org.springframework.boot' version '2.5.10'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
    id 'java'
}

group = 'br.com.simple'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('swaggerVersion', "2.9.2")
    set('springBootVersion', "2.5.10")
    set('apacheCommonsVersion', "2.7")
    set('apacheCommonsLangVersions', "2.6")
    set('cucumberVersion', "7.2.3")
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Swagger
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Tests
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "com.h2database:h2:1.4.200"
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Apache Commons
    implementation "commons-io:commons-io:${apacheCommonsVersion}"
    implementation "commons-lang:commons-lang:${apacheCommonsLangVersions}"

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

}

sonarqube {
    properties {
        property "sonar.projectKey", "Caiuzu_crud"
        property "sonar.organization", "caiuzu"
        property "sonar.host.url", "https://sonarcloud.io"
        property 'sonar.exclusions',
                "src/main/java/br/com/simple/crud/CrudApplication.java," +
                        "src/main/java/br/com/simple/crud/config/**, " +
                        "src/main/java/br/com/simple/crud/exception/**, " +
                        "src/main/java/br/com/simple/crud/domain/dto/**, " +
                        "src/main/java/br/com/simple/crud/domain/entity/**"

    }
}

tasks.named('test') {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport
}

tasks.jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }

    afterEvaluate {
        getClassDirectories().from(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["src/main/java/br/com/simple/crud/CrudApplication.java, " +
                                      "src/main/java/br/com/simple/crud/config/**, " +
                                      "src/main/java/br/com/simple/crud/exception/**, " +
                                      "src/main/java/br/com/simple/crud/domain/dto/**, " +
                                      "src/main/java/br/com/simple/crud/domain/entity/**"]
            )
        }))
    }
}